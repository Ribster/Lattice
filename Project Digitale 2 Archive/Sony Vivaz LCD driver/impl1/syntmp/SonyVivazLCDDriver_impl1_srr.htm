<html><body><samp><pre>
<!@TC:1463590592>
#Build: Synplify Pro K-2015.09L-2, Build 126R, Dec 14 2015
#install: C:\lscc\diamond\3.7_x64\synpbase
#OS: Windows 7 6.1
#Hostname: WIN-GREMBOOKO88

# Wed May 18 18:56:32 2016

#Implementation: impl1

<a name=compilerReport1></a>Synopsys HDL Compiler, version comp201509p1, Build 145R, built Dec  9 2015</a>
@N: : <!@TM:1463590593> | Running in 64-bit mode 
Copyright (C) 1994-2015 Synopsys, Inc. This software and the associated documentation are proprietary to Synopsys, Inc. This software may only be used in accordance with the terms and conditions of a written license agreement with Synopsys, Inc.  All other use, reproduction, or distribution of this software is strictly prohibited.

<a name=compilerReport2></a>Synopsys VHDL Compiler, version comp201509p1, Build 145R, built Dec  9 2015</a>
@N: : <!@TM:1463590593> | Running in 64-bit mode 
Copyright (C) 1994-2015 Synopsys, Inc. This software and the associated documentation are proprietary to Synopsys, Inc. This software may only be used in accordance with the terms and conditions of a written license agreement with Synopsys, Inc.  All other use, reproduction, or distribution of this software is strictly prohibited.

@N:<a href="@N:CD720:@XP_HELP">CD720</a> : <a href="C:\lscc\diamond\3.7_x64\synpbase\lib\vhd\std.vhd:123:18:123:22:@N:CD720:@XP_MSG">std.vhd(123)</a><!@TM:1463590593> | Setting time resolution to ns
@N: : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:9:7:9:11:@N::@XP_MSG">main.vhd(9)</a><!@TM:1463590593> | Top entity is set to main.
File Z:\GITHUB\Lattice\Sony Vivaz LCD driver\lcd_sender.vhd changed - recompiling
File C:\lscc\diamond\3.7_x64\synpbase\lib\vhd\math_real.vhd changed - recompiling
File C:\lscc\diamond\3.7_x64\synpbase\lib\cpld\lattice.vhd changed - recompiling
File Z:\GITHUB\Lattice\Sony Vivaz LCD driver\lcd_arbiter.vhd changed - recompiling
File Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd changed - recompiling
VHDL syntax check successful!
File Z:\GITHUB\Lattice\Sony Vivaz LCD driver\lcd_sender.vhd changed - recompiling
@N:<a href="@N:CD630:@XP_HELP">CD630</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:9:7:9:11:@N:CD630:@XP_MSG">main.vhd(9)</a><!@TM:1463590593> | Synthesizing work.main.behavioral.
@N:<a href="@N:CD231:@XP_HELP">CD231</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:67:17:67:19:@N:CD231:@XP_MSG">main.vhd(67)</a><!@TM:1463590593> | Using onehot encoding for type lcd_states (undefined="1000000000000000")
@N:<a href="@N:CD630:@XP_HELP">CD630</a> : <a href="C:\lscc\diamond\3.7_x64\cae_library\synthesis\vhdl\machxo2.vhd:2291:10:2291:14:@N:CD630:@XP_MSG">machxo2.vhd(2291)</a><!@TM:1463590593> | Synthesizing work.osch.syn_black_box.
Post processing for work.osch.syn_black_box
<font color=#A52A2A>@W:<a href="@W:CD638:@XP_HELP">CD638</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:68:8:68:20:@W:CD638:@XP_MSG">main.vhd(68)</a><!@TM:1463590593> | Signal ns_lcd_state is undriven. Either assign the signal a value or remove the signal declaration.</font>
<font color=#A52A2A>@W:<a href="@W:CD638:@XP_HELP">CD638</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:69:8:69:20:@W:CD638:@XP_MSG">main.vhd(69)</a><!@TM:1463590593> | Signal ps_lcd_state is undriven. Either assign the signal a value or remove the signal declaration.</font>
@N:<a href="@N:CD630:@XP_HELP">CD630</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\lcd_arbiter.vhd:8:7:8:18:@N:CD630:@XP_MSG">lcd_arbiter.vhd(8)</a><!@TM:1463590593> | Synthesizing work.lcd_arbiter.beh_lcd_arbiter.
@N:<a href="@N:CD231:@XP_HELP">CD231</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\lcd_arbiter.vhd:19:20:19:22:@N:CD231:@XP_MSG">lcd_arbiter.vhd(19)</a><!@TM:1463590593> | Using onehot encoding for type arbiter_state (idle="1000000")
Post processing for work.lcd_arbiter.beh_lcd_arbiter
<font color=#A52A2A>@W:<a href="@W:CL240:@XP_HELP">CL240</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\lcd_arbiter.vhd:13:2:13:11:@W:CL240:@XP_MSG">lcd_arbiter.vhd(13)</a><!@TM:1463590593> | lcd_reset is not assigned a value (floating) -- simulation mismatch possible. </font>
<font color=#A52A2A>@W:<a href="@W:CL117:@XP_HELP">CL117</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\lcd_arbiter.vhd:38:2:38:4:@W:CL117:@XP_MSG">lcd_arbiter.vhd(38)</a><!@TM:1463590593> | Latch generated from process for signal NS_arbiter_state(0 to 6); possible missing assignment in an if or case statement.</font>
<font color=#A52A2A>@W:<a href="@W:CL113:@XP_HELP">CL113</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\lcd_arbiter.vhd:25:2:25:4:@W:CL113:@XP_MSG">lcd_arbiter.vhd(25)</a><!@TM:1463590593> | Feedback mux created for signal PS_arbiter_state[0:6]. To avoid the feedback mux, assign values explicitly under all conditions of conditional assignment statements.</font>
<font color=#A52A2A>@W:<a href="@W:CL111:@XP_HELP">CL111</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\lcd_arbiter.vhd:38:2:38:4:@W:CL111:@XP_MSG">lcd_arbiter.vhd(38)</a><!@TM:1463590593> | All reachable assignments to go are '1'; removing register. To preserve a constant register, use the syn_preserve attribute.</font>
<font color=#A52A2A>@W:<a href="@W:CL169:@XP_HELP">CL169</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\lcd_arbiter.vhd:25:2:25:4:@W:CL169:@XP_MSG">lcd_arbiter.vhd(25)</a><!@TM:1463590593> | Pruning unused register PS_arbiter_state(0 to 5). Make sure that there are no unused intermediate registers.</font>
<font color=#A52A2A>@W:<a href="@W:CL169:@XP_HELP">CL169</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\lcd_arbiter.vhd:25:2:25:4:@W:CL169:@XP_MSG">lcd_arbiter.vhd(25)</a><!@TM:1463590593> | Pruning unused register PS_arbiter_state(idle). Make sure that there are no unused intermediate registers.</font>
<font color=#A52A2A>@W:<a href="@W:CL169:@XP_HELP">CL169</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\lcd_arbiter.vhd:38:2:38:4:@W:CL169:@XP_MSG">lcd_arbiter.vhd(38)</a><!@TM:1463590593> | Pruning unused register NS_arbiter_state(0 to 6). Make sure that there are no unused intermediate registers.</font>
@N:<a href="@N:CD630:@XP_HELP">CD630</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\lcd_sender.vhd:8:7:8:17:@N:CD630:@XP_MSG">lcd_sender.vhd(8)</a><!@TM:1463590593> | Synthesizing work.lcd_sender.beh_lcd_sender.
@N:<a href="@N:CD231:@XP_HELP">CD231</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\lcd_sender.vhd:23:17:23:19:@N:CD231:@XP_MSG">lcd_sender.vhd(23)</a><!@TM:1463590593> | Using onehot encoding for type state_type (undefined="10000000")
<font color=#A52A2A>@W:<a href="@W:CD434:@XP_HELP">CD434</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\lcd_sender.vhd:39:9:39:12:@W:CD434:@XP_MSG">lcd_sender.vhd(39)</a><!@TM:1463590593> | Signal clk in the sensitivity list is not used in the process</font>
Post processing for work.lcd_sender.beh_lcd_sender
<font color=#A52A2A>@W:<a href="@W:CL117:@XP_HELP">CL117</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\lcd_sender.vhd:73:2:73:4:@W:CL117:@XP_MSG">lcd_sender.vhd(73)</a><!@TM:1463590593> | Latch generated from process for signal lcd_rs; possible missing assignment in an if or case statement.</font>
<font color=#A52A2A>@W:<a href="@W:CL117:@XP_HELP">CL117</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\lcd_sender.vhd:73:2:73:4:@W:CL117:@XP_MSG">lcd_sender.vhd(73)</a><!@TM:1463590593> | Latch generated from process for signal lcd_write; possible missing assignment in an if or case statement.</font>
<font color=#A52A2A>@W:<a href="@W:CL117:@XP_HELP">CL117</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\lcd_sender.vhd:73:2:73:4:@W:CL117:@XP_MSG">lcd_sender.vhd(73)</a><!@TM:1463590593> | Latch generated from process for signal busy; possible missing assignment in an if or case statement.</font>
<font color=#A52A2A>@W:<a href="@W:CL117:@XP_HELP">CL117</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\lcd_sender.vhd:73:2:73:4:@W:CL117:@XP_MSG">lcd_sender.vhd(73)</a><!@TM:1463590593> | Latch generated from process for signal lcd_bus(15 downto 0); possible missing assignment in an if or case statement.</font>
Post processing for work.main.behavioral
@N:<a href="@N:CL201:@XP_HELP">CL201</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\lcd_sender.vhd:34:2:34:4:@N:CL201:@XP_MSG">lcd_sender.vhd(34)</a><!@TM:1463590593> | Trying to extract state machine for register PS_vivaz_state.
Extracted state machine for register PS_vivaz_state
State machine has 7 reachable states with original encodings of:
   00000010
   00000100
   00001000
   00010000
   00100000
   01000000
   10000000
@N:<a href="@N:CL159:@XP_HELP">CL159</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\lcd_arbiter.vhd:10:2:10:5:@N:CL159:@XP_MSG">lcd_arbiter.vhd(10)</a><!@TM:1463590593> | Input clk is unused.
@N:<a href="@N:CL159:@XP_HELP">CL159</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\lcd_arbiter.vhd:11:2:11:5:@N:CL159:@XP_MSG">lcd_arbiter.vhd(11)</a><!@TM:1463590593> | Input rst is unused.
@N:<a href="@N:CL159:@XP_HELP">CL159</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\lcd_arbiter.vhd:14:2:14:8:@N:CL159:@XP_MSG">lcd_arbiter.vhd(14)</a><!@TM:1463590593> | Input enable is unused.
<font color=#A52A2A>@W:<a href="@W:CL138:@XP_HELP">CL138</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:119:2:119:4:@W:CL138:@XP_MSG">main.vhd(119)</a><!@TM:1463590593> | Removing register 'data1Command0_i' because it is only assigned 0 or its original value.</font>
<font color=#A52A2A>@W:<a href="@W:CL138:@XP_HELP">CL138</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:119:2:119:4:@W:CL138:@XP_MSG">main.vhd(119)</a><!@TM:1463590593> | Removing register 'payload_i' because it is only assigned 0 or its original value.</font>
@N:<a href="@N:CL189:@XP_HELP">CL189</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:119:2:119:4:@N:CL189:@XP_MSG">main.vhd(119)</a><!@TM:1463590593> | Register bit count(6) is always 0.
@N:<a href="@N:CL189:@XP_HELP">CL189</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:119:2:119:4:@N:CL189:@XP_MSG">main.vhd(119)</a><!@TM:1463590593> | Register bit count(7) is always 0.
@N:<a href="@N:CL189:@XP_HELP">CL189</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:119:2:119:4:@N:CL189:@XP_MSG">main.vhd(119)</a><!@TM:1463590593> | Register bit count(8) is always 0.
@N:<a href="@N:CL189:@XP_HELP">CL189</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:119:2:119:4:@N:CL189:@XP_MSG">main.vhd(119)</a><!@TM:1463590593> | Register bit count(9) is always 0.
@N:<a href="@N:CL189:@XP_HELP">CL189</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:119:2:119:4:@N:CL189:@XP_MSG">main.vhd(119)</a><!@TM:1463590593> | Register bit count(10) is always 0.
@N:<a href="@N:CL189:@XP_HELP">CL189</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:119:2:119:4:@N:CL189:@XP_MSG">main.vhd(119)</a><!@TM:1463590593> | Register bit count(11) is always 0.
@N:<a href="@N:CL189:@XP_HELP">CL189</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:119:2:119:4:@N:CL189:@XP_MSG">main.vhd(119)</a><!@TM:1463590593> | Register bit count(12) is always 0.
@N:<a href="@N:CL189:@XP_HELP">CL189</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:119:2:119:4:@N:CL189:@XP_MSG">main.vhd(119)</a><!@TM:1463590593> | Register bit count(13) is always 0.
@N:<a href="@N:CL189:@XP_HELP">CL189</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:119:2:119:4:@N:CL189:@XP_MSG">main.vhd(119)</a><!@TM:1463590593> | Register bit count(14) is always 0.
@N:<a href="@N:CL189:@XP_HELP">CL189</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:119:2:119:4:@N:CL189:@XP_MSG">main.vhd(119)</a><!@TM:1463590593> | Register bit count(15) is always 0.
@N:<a href="@N:CL189:@XP_HELP">CL189</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:119:2:119:4:@N:CL189:@XP_MSG">main.vhd(119)</a><!@TM:1463590593> | Register bit count(16) is always 0.
@N:<a href="@N:CL189:@XP_HELP">CL189</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:119:2:119:4:@N:CL189:@XP_MSG">main.vhd(119)</a><!@TM:1463590593> | Register bit count(17) is always 0.
@N:<a href="@N:CL189:@XP_HELP">CL189</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:119:2:119:4:@N:CL189:@XP_MSG">main.vhd(119)</a><!@TM:1463590593> | Register bit count(18) is always 0.
@N:<a href="@N:CL189:@XP_HELP">CL189</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:119:2:119:4:@N:CL189:@XP_MSG">main.vhd(119)</a><!@TM:1463590593> | Register bit count(19) is always 0.
@N:<a href="@N:CL189:@XP_HELP">CL189</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:119:2:119:4:@N:CL189:@XP_MSG">main.vhd(119)</a><!@TM:1463590593> | Register bit count(20) is always 0.
@N:<a href="@N:CL189:@XP_HELP">CL189</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:119:2:119:4:@N:CL189:@XP_MSG">main.vhd(119)</a><!@TM:1463590593> | Register bit count(21) is always 0.
@N:<a href="@N:CL189:@XP_HELP">CL189</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:119:2:119:4:@N:CL189:@XP_MSG">main.vhd(119)</a><!@TM:1463590593> | Register bit count(22) is always 0.
@N:<a href="@N:CL189:@XP_HELP">CL189</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:119:2:119:4:@N:CL189:@XP_MSG">main.vhd(119)</a><!@TM:1463590593> | Register bit count(23) is always 0.
@N:<a href="@N:CL189:@XP_HELP">CL189</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:119:2:119:4:@N:CL189:@XP_MSG">main.vhd(119)</a><!@TM:1463590593> | Register bit tmp(1) is always 1.
<font color=#A52A2A>@W:<a href="@W:CL260:@XP_HELP">CL260</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:119:2:119:4:@W:CL260:@XP_MSG">main.vhd(119)</a><!@TM:1463590593> | Pruning register bit 1 of tmp(7 downto 0). If this is not the intended behavior, drive the input with valid values, or an input from the top level.</font>
<font color=#A52A2A>@W:<a href="@W:CL279:@XP_HELP">CL279</a> : <a href="Z:\GITHUB\Lattice\Sony Vivaz LCD driver\main.vhd:119:2:119:4:@W:CL279:@XP_MSG">main.vhd(119)</a><!@TM:1463590593> | Pruning register bits 23 to 6 of count(23 downto 0). If this is not the intended behavior, drive the inputs with valid values, or inputs from the top level.</font>

At c_vhdl Exit (Real Time elapsed 0h:00m:00s; CPU Time elapsed 0h:00m:00s; Memory used current: 75MB peak: 76MB)

Process took 0h:00m:01s realtime, 0h:00m:01s cputime

Process completed successfully.
# Wed May 18 18:56:33 2016

###########################################################]
<a name=compilerReport3></a>Synopsys Netlist Linker, version comp201509p1, Build 145R, built Dec  9 2015</a>
@N: : <!@TM:1463590593> | Running in 64-bit mode 
File Z:\GITHUB\Lattice\Sony Vivaz LCD driver\impl1\synwork\layer0.srs changed - recompiling

At syn_nfilter Exit (Real Time elapsed 0h:00m:00s; CPU Time elapsed 0h:00m:00s; Memory used current: 67MB peak: 68MB)

Process took 0h:00m:01s realtime, 0h:00m:01s cputime

Process completed successfully.
# Wed May 18 18:56:33 2016

###########################################################]
@END

At c_hdl Exit (Real Time elapsed 0h:00m:00s; CPU Time elapsed 0h:00m:00s; Memory used current: 3MB peak: 4MB)

Process took 0h:00m:01s realtime, 0h:00m:01s cputime

Process completed successfully.
# Wed May 18 18:56:33 2016

###########################################################]
<a name=compilerReport4></a>Synopsys Netlist Linker, version comp201509p1, Build 145R, built Dec  9 2015</a>
@N: : <!@TM:1463590595> | Running in 64-bit mode 
File Z:\GITHUB\Lattice\Sony Vivaz LCD driver\impl1\synwork\SonyVivazLCDDriver_impl1_comp.srs changed - recompiling

At syn_nfilter Exit (Real Time elapsed 0h:00m:00s; CPU Time elapsed 0h:00m:00s; Memory used current: 67MB peak: 68MB)

Process took 0h:00m:01s realtime, 0h:00m:01s cputime

Process completed successfully.
# Wed May 18 18:56:35 2016

###########################################################]
Pre-mapping Report

<a name=mapperReport5></a>Synopsys Lattice Technology Pre-mapping, Version maplat, Build 1368R, Built Jan  8 2016 09:37:50</a>
Copyright (C) 1994-2016 Synopsys, Inc. All rights reserved. This Synopsys software and all associated documentation are proprietary to Synopsys, Inc. and may only be used pursuant to the terms and conditions of a written license agreement with Synopsys, Inc. All other use, reproduction, modification, or distribution of the Synopsys software or the associated documentation is strictly prohibited.
Product Version K-2015.09L-2

Mapper Startup Complete (Real Time elapsed 0h:00m:00s; CPU Time elapsed 0h:00m:00s; Memory used current: 99MB peak: 99MB)

@L: Z:\GITHUB\Lattice\Sony Vivaz LCD driver\impl1\SonyVivazLCDDriver_impl1_scck.rpt 
Printing clock  summary report in "Z:\GITHUB\Lattice\Sony Vivaz LCD driver\impl1\SonyVivazLCDDriver_impl1_scck.rpt" file 
@N:<a href="@N:MF248:@XP_HELP">MF248</a> : <!@TM:1463590597> | Running in 64-bit mode. 
@N:<a href="@N:MF666:@XP_HELP">MF666</a> : <!@TM:1463590597> | Clock conversion enabled  

Design Input Complete (Real Time elapsed 0h:00m:00s; CPU Time elapsed 0h:00m:00s; Memory used current: 99MB peak: 101MB)


Mapper Initialization Complete (Real Time elapsed 0h:00m:00s; CPU Time elapsed 0h:00m:00s; Memory used current: 99MB peak: 101MB)


Start loading timing files (Real Time elapsed 0h:00m:00s; CPU Time elapsed 0h:00m:00s; Memory used current: 111MB peak: 112MB)


Finished loading timing files (Real Time elapsed 0h:00m:00s; CPU Time elapsed 0h:00m:00s; Memory used current: 111MB peak: 114MB)

<font color=#A52A2A>@W:<a href="@W:FX474:@XP_HELP">FX474</a> : <!@TM:1463590597> | User-specified initial value defined for some sequential elements which can prevent optimum synthesis results from being achieved. </font> 
<font color=#A52A2A>@W:<a href="@W:MT462:@XP_HELP">MT462</a> : <a href="z:\github\lattice\sony vivaz lcd driver\lcd_sender.vhd:43:8:43:16:@W:MT462:@XP_MSG">lcd_sender.vhd(43)</a><!@TM:1463590597> | Net inst_lcd_sender.NS_vivaz_state_0_sqmuxa appears to be an unidentified clock source. Assuming default frequency. </font>
<font color=#A52A2A>@W:<a href="@W:MT462:@XP_HELP">MT462</a> : <a href="z:\github\lattice\sony vivaz lcd driver\lcd_sender.vhd:73:2:73:4:@W:MT462:@XP_MSG">lcd_sender.vhd(73)</a><!@TM:1463590597> | Net inst_lcd_sender.un1_PS_vivaz_state appears to be an unidentified clock source. Assuming default frequency. </font>
ICG Latch Removal Summary:
Number of ICG latches removed:	0
Number of ICG latches not removed:	0
syn_allowed_resources : blockrams=26  set on top level netlist main

Finished netlist restructuring (Real Time elapsed 0h:00m:00s; CPU Time elapsed 0h:00m:00s; Memory used current: 138MB peak: 140MB)



<a name=mapperReport6></a>Clock Summary</a>
*****************

Start                                          Requested     Requested     Clock                                         Clock              
Clock                                          Frequency     Period        Type                                          Group              
--------------------------------------------------------------------------------------------------------------------------------------------
lcd_sender|PS_vivaz_state_derived_clock[5]     2.1 MHz       480.769       derived (from main|clk133_inferred_clock)     Inferred_clkgroup_0
main|clk133_inferred_clock                     2.1 MHz       480.769       inferred                                      Inferred_clkgroup_0
============================================================================================================================================

<font color=#A52A2A>@W:<a href="@W:MT531:@XP_HELP">MT531</a> : <a href="z:\github\lattice\sony vivaz lcd driver\lcd_sender.vhd:73:2:73:4:@W:MT531:@XP_MSG">lcd_sender.vhd(73)</a><!@TM:1463590597> | Found signal identified as System clock which controls 3 sequential elements including inst_lcd_sender.lcd_write.  Using this clock, which has no specified timing constraint, can prevent conversion of gated or generated clocks and can adversely impact design performance. </font>
<font color=#A52A2A>@W:<a href="@W:MT529:@XP_HELP">MT529</a> : <a href="z:\github\lattice\sony vivaz lcd driver\lcd_sender.vhd:34:2:34:4:@W:MT529:@XP_MSG">lcd_sender.vhd(34)</a><!@TM:1463590597> | Found inferred clock main|clk133_inferred_clock which controls 15 sequential elements including inst_lcd_sender.PS_vivaz_state[0:6]. This clock has no specified timing constraint which may prevent conversion of gated or generated clocks and may adversely impact design performance. </font>

Finished Pre Mapping Phase.

Starting constraint checker (Real Time elapsed 0h:00m:00s; CPU Time elapsed 0h:00m:00s; Memory used current: 138MB peak: 140MB)

<font color=#A52A2A>@W:<a href="@W:MO171:@XP_HELP">MO171</a> : <a href="z:\github\lattice\sony vivaz lcd driver\lcd_sender.vhd:73:2:73:4:@W:MO171:@XP_MSG">lcd_sender.vhd(73)</a><!@TM:1463590597> | Sequential instance inst_lcd_sender.lcd_rs reduced to a combinational gate by constant propagation </font>

Available hyper_sources - for debug and ip models
	None Found

Encoding state machine PS_vivaz_state[0:6] (in view: work.lcd_sender(beh_lcd_sender))
original code -> new code
   00000010 -> 000
   00000100 -> 001
   00001000 -> 010
   00010000 -> 011
   00100000 -> 100
   01000000 -> 101
   10000000 -> 110
<font color=#A52A2A>@W:<a href="@W:MT462:@XP_HELP">MT462</a> : <a href="z:\github\lattice\sony vivaz lcd driver\lcd_sender.vhd:34:2:34:4:@W:MT462:@XP_MSG">lcd_sender.vhd(34)</a><!@TM:1463590597> | Net inst_lcd_sender.PS_vivaz_state_d[6] appears to be an unidentified clock source. Assuming default frequency. </font>
<font color=#A52A2A>@W:<a href="@W:MT462:@XP_HELP">MT462</a> : <a href="z:\github\lattice\sony vivaz lcd driver\lcd_sender.vhd:73:2:73:4:@W:MT462:@XP_MSG">lcd_sender.vhd(73)</a><!@TM:1463590597> | Net inst_lcd_sender.un1_PS_vivaz_state appears to be an unidentified clock source. Assuming default frequency. </font>
None
None

Finished constraint checker (Real Time elapsed 0h:00m:01s; CPU Time elapsed 0h:00m:01s; Memory used current: 138MB peak: 140MB)

Pre-mapping successful!

At Mapper Exit (Real Time elapsed 0h:00m:01s; CPU Time elapsed 0h:00m:01s; Memory used current: 76MB peak: 140MB)

Process took 0h:00m:01s realtime, 0h:00m:01s cputime
# Wed May 18 18:56:37 2016

###########################################################]
Map & Optimize Report

<a name=mapperReport7></a>Synopsys Lattice Technology Mapper, Version maplat, Build 1368R, Built Jan  8 2016 09:37:50</a>
Copyright (C) 1994-2016 Synopsys, Inc. All rights reserved. This Synopsys software and all associated documentation are proprietary to Synopsys, Inc. and may only be used pursuant to the terms and conditions of a written license agreement with Synopsys, Inc. All other use, reproduction, modification, or distribution of the Synopsys software or the associated documentation is strictly prohibited.
Product Version K-2015.09L-2

Mapper Startup Complete (Real Time elapsed 0h:00m:00s; CPU Time elapsed 0h:00m:00s; Memory used current: 99MB peak: 99MB)

@N:<a href="@N:MF248:@XP_HELP">MF248</a> : <!@TM:1463590598> | Running in 64-bit mode. 
@N:<a href="@N:MF666:@XP_HELP">MF666</a> : <!@TM:1463590598> | Clock conversion enabled  

Design Input Complete (Real Time elapsed 0h:00m:00s; CPU Time elapsed 0h:00m:00s; Memory used current: 98MB peak: 100MB)


Mapper Initialization Complete (Real Time elapsed 0h:00m:00s; CPU Time elapsed 0h:00m:00s; Memory used current: 98MB peak: 100MB)


Start loading timing files (Real Time elapsed 0h:00m:00s; CPU Time elapsed 0h:00m:00s; Memory used current: 111MB peak: 111MB)


Finished loading timing files (Real Time elapsed 0h:00m:00s; CPU Time elapsed 0h:00m:00s; Memory used current: 111MB peak: 113MB)



Starting Optimization and Mapping (Real Time elapsed 0h:00m:00s; CPU Time elapsed 0h:00m:00s; Memory used current: 138MB peak: 140MB)

<font color=#A52A2A>@W:<a href="@W:MO171:@XP_HELP">MO171</a> : <a href="z:\github\lattice\sony vivaz lcd driver\lcd_sender.vhd:73:2:73:4:@W:MO171:@XP_MSG">lcd_sender.vhd(73)</a><!@TM:1463590598> | Sequential instance inst_lcd_sender.lcd_rs reduced to a combinational gate by constant propagation </font>

Available hyper_sources - for debug and ip models
	None Found

<font color=#A52A2A>@W:<a href="@W:MT462:@XP_HELP">MT462</a> : <a href="z:\github\lattice\sony vivaz lcd driver\lcd_sender.vhd:73:2:73:4:@W:MT462:@XP_MSG">lcd_sender.vhd(73)</a><!@TM:1463590598> | Net inst_lcd_sender.un1_PS_vivaz_state appears to be an unidentified clock source. Assuming default frequency. </font>
While running 64-bit - Windows build

<a name=error8></a><font color=red>@E: : <!@TM:1463590598> | :Signal 004 error in m_gen_lattice.exe</font> 
Stack trace
===========
0x140000000
0x140000000
0x140000000
0x140000000
0x140000000
0x140000000
0x1B6EE54D0
0x1B6EC56F0
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6CAF560
0x1B6EE3260
Please open a web case about this problem. A Synopsys CAE will then contact you.

Instructions to open a web-case:
1.  Go to the Synopsys support web site, https://solvnet.synopsys.com. 
2.  Login with your user name and password. If you do not have an account, please register and set one up.
3.  Click the `Enter A Call' link.
4.  Provide a detailed description of the problem, and fill in all required fields.
5.  Attach any test cases or archived project files required to reproduce the problem. 
Stack trace
===========
0x1B6EE3260
0x1B6EE3260
0x1B6EE3260
0x1B6EE3260
0x1B6EE3260
0x1B6EE3260
0x1B6EE54D0
0x1B6EC56F0
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6EFFE1A
0x1B6CAF560
0x1B6EE3260

</pre></samp></body></html>
